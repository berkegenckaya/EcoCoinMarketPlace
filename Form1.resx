<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHEAAAA7CAYAAABMvWXaAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAADRhJREFUeF7tW2lUXVcVRq221Q5Wa3VVrdbWpf1hrf5zLX9VV//rD4fl0tgpYzOH
        oYEwhSEkQBgSEhJmAjSBECATEIYECPN7zFAIEGYI8zy/bPe3773wSB5pf/THe9f3rXXX455z7j7n7u/s
        vc89++BAdtg87CTqAHYSdQA7iTqAnUQdwE6iDmAnUQfQNYmzq4t0cbRSfvUM3ZF4f3GEPHsz6O06D3Io
        f58cypTr7Xp38uBy1OsNuiPxn/ci6RvlH9H3q/fQr2oPC3G/5l/coxz1eoNNkLj60EQZ40b6a+speqvW
        VYhpmu9XazfiX+3n6FsVW+nl6r30Tp0nJY+Wyy/uUY56S2iaHxC5b9W60V+4n4wxo/RrC7B6Ev/cHEjf
        rPiYnqnYRk/z9bXyD+k7lTvoKS57vmon5U81qy0VVMx00r/bo+g1o6MQhzYvsxW+ZjzE5eel3hz5Uy3S
        5qmKj0Qu5KOfZyq3Sb9/aj6htrReWD2JrxoO0CvV++ilqt3k1ZtJK6ZVcZM/MuwXy0oYKVVbbsT4yizH
        wi1ChEPpf2iM7y0Bz0MO5EHu8sNV8u7Nkv7QL/q3dlg9iW/UuNDXOZZBqd+t+oReYKv5AVvYtyu3C0lp
        Y9Vqy414sDxFzr1ptEwmihopptHlGbVmI/A85EAe5L5QuUv6QX+IoW/UOKstrRc2ERPbFobow444USws
        5nVWbOJwKS2YltUWm4Cra4yN8vskQE4iW+TrNU4iH/182BFLrdyvLcAmSASujtdKnHrFsI9+3+ClllqG
        oa6Rws8n0iG3Y8p15BhFRCdRfdPnagvLeKfBU+Q/y1Z5baJWLbV+2AyJ2RMNHNu20HOyCPlYFiqtS+uW
        cr+rl5IuZZKzx3E66OYvl2dAGF3gMs9jYWtln3oHUfrVHBoa3vi9OG9aop+zJb7IrhQkpo1VqTXWD5sh
        EZhZXSDnnlQKGcujh3y/OLtImTfymKxwIQhW58hWB+L6+odofn6BqmsbaWFxkbp7+ikmKU0lExbqTwEh
        5+h2SYUinHFzppH+2ORPDiV/40+TMrXU+mE7JD4EbYxVovqqJgoOj6GDrv7kxJYH4k6x+6xvaiWTyUR1
        jS10IiyKdh70IHe/ENp5yJNOnomjlrYOqa8w1NKJ8Cgh0tE9gA6wnOjEVOrt7JMuhmmGGuaUv20BVk/i
        QyYPF3A1u4C2H3CXGOfuF0pHfEPo0pUbUtc/+IDOxCRL3afegZRdUExzc/NSNzM7Rzdyb5OL1wly8Twh
        ljo4NEyzc3OUlJopcnDhWVwFhetWqPVtzbANSzTT4+TQBMUnXRYLRHzz4Hh35VoujU9MUk/vAIWfSxDr
        +uzyNZqZmZNn4E7Ts3Kk3Dcogmrqm4VAuFK/4DPk5nOSnLgO7rXKUC/PALZAIGAz7jR2uITerHWhjCll
        1WhaWqHrOYV0+GgQu0M/iXVnY1NoeGSMpmdmKTXjJu1x9iafwAjaxe40kusG2PrmFxbp4pXrMgm0xU50
        fCpNDoyLXFuEzZB4mT/K8fGNlelbda60wh/xGiqq68Si9h/2FUIDQs+RgRc0QHVNIy0tL9H97j7+zFDc
        LYgDiZezsmlmepaW2NQ9BjLl+/PZiu20pT16080Ba4TNkJg+ZpClP77jflPvTkumFbVmHd29/fI9KETx
        YgXxDxbpffzUmtXhs6Ok7PFdHuQdf8KfLZDvUP4BJdlXp1898LGPrTEo+bf1HmqpZYxPTvG3YC65egUJ
        cViFhkcmUFPLPbWFZfxO/dhHP1njNWqp9cPqSYweLpJMArbCkBN8oWqXZCd+ylazrTOe+paeFMseUntN
        O82Nbe4a+xbHRQ7kQS7ko5+XqndLv1EPitSW1gurJxFpJGxI4/fvbWcojhc4v+DY9QorHJl73FvC8PK0
        bGzv6L1ALxn30NDylFqzEXgemX9kLBATsYD6R9tZIVLr19ph9SRCkcjzQal/aPSl7Z0J9KrhIH2PLQUp
        ppjhYrXlOpCGCh7IkTyh8vxOuUf5o8DzkAN5P2a5kI9+0B/6xfPWDqsnsXqmi5y6L9Ev+fMCCVtYzfNM
        ynvNQRTFBDyaydjKrtGh7L+yx4r49kO+8PscP4Ny1JsDz0c9KKb3WoKEdMhHP2/WuHC/qVQ926W2tF7Y
        zMIG6F4cpVuTTeqdZbzfEUMvclxDbvDd5uNS9m7TcblHOeqfhLzJZurifmwJNkXil4FnbyZb0wf0dMVW
        cYfI2uMXRy5Q7tGXqbbUD3RHooaCyRZZdf6sxlF+ca9X6JbE/yfYSdQBHLBpjOt0dBKFRSasXcfDzlPH
        /R612VeH1rZOSvgsg/yDz0r6B1mIkxGxdOX6LVo1fflznvlFpbR1n5tssS0uLamlXw7ILUbEJFNccvqG
        DImGnPxiOh11QfTQP/jVnLPJK7wrabSjgadpefkLDv08AeMTU5RTUEy3WN7UtLKJ4YCkqatPsCgygxWZ
        lpUtV3LaVcnRPYrl5ZW1PJ0lzMzM0sTktHq3EcjdIasumYPEVCouq6KS8mo5LoHN67GJSbWlgpXVVZE1
        a6E/KALZiulZy0cRl1c2H+f+w350hN/bxSuQfIPOqKUK0rJyZHyYYEhddXb1qjXrwHjm5jfXAYDxQRca
        ikur5OhICE8gvNcXYWJq2uL4kYnZ7+pHjkcC1vTlgM1hkJiTb3nnQ0PWjTzZ+cds2rb/CH205zAFhChH
        4pd4wLDmvS4+kk3f5egpv8dORq4p4V5Hl2xII3WUf8fy5rKWv2tsaZNzMTsOutMnjl4ia9+nPnThYobU
        AzgM5ex5XPpYXVGUci27QDa7dzt7yxh38Fj3OB8l38CIDRYFciAf2X/87XPitCgs/rMr3I+vZEG8AsIl
        X9nVrWT4kUQGCbD+7SwbY0LGJJateYUnDDA8Mi6JaSd3VU/cdge3m5qeptIKozwfelb5Tu3pG5DJ9PFe
        V0rLzJaySSYOOU2kzjBu9AGdG/ldgWz2EOgfY8ORlN1O3nIvJKIAv3BxmJloZK4wuB24rcBT0ZLSmZtf
        ECutMjZIfWR8iigjMi6FFhaU/0DKZZNHJh0TZHXVREVsdbj3OBYqCtkMwyOjQjZeuKqmgYnll2MlhJ6N
        Ewu5lKFk8g11DdKnf/AZMqkzO5i9CYjF5jfGMTY+QSERcdIv3KMGPAeCjHVNdLfcIBMEVnnAzU/SU739
        gzzZguWEgEbiCBNUW98sExYYejAieoJe8u8oB5gbmtrkHuUPhkdphr3EyOiY1CFzgrEhy4JkNMaAdtqB
        LbwnvAPKa+qVb+FVfi9XHsdBlgl5OFqCMaPMnT1F4+f3xL0KiR7+oRQRlSSDAds3bt2mSkOdCALgAp1Z
        sW1sTZaAzDjqG5rb1BKixcUl8mH/f5gV0dndS5XVdaIoDLRvYPM4U9vQIrPvELsLc8Dtms9kI78o2sES
        TTxJgLBziaKowuL1w0/XcgplUuD9NAiJPJbSSqPcF7OC97oclVgItLZ38riDNpA4wJP2fMIlGT+exd84
        JYA2twoVL9bc0i568GZyQIA54E4xcRC+0MbN9ySHg/WNeaTRMAHgIfzYkODOPf3DZALCw+Xdvqu2G5D+
        ofNBdQKYudPH9yA1uHE9BpuelauWKDCZFPfnz4qEorLz1nf8e/sGlRfmgQ/yrEVsw4DgTmMupKmt1jHK
        VoOFDdwvDj6BIPPYgbM0IAgZesBY3yht4D00S9RINHfXOA0nJEYnqyXmJBrUEqV/DZ/f63iMRBzfQH/X
        c2/LPQC3i3fSFGxO4tIjiy2JiVyHxVLs2vGSQIlxANJnWBeg3+paxcOZ1H/ogUVr8jq6esQY3NgaxyaU
        MTtAEAqhXLAPhnHBdTW3Kvk3xDN0ik5wQAkny3DswSsgTOpximwf18Fiw1mRcck8SH5puCmcddFg4MEp
        cjgwc30Qu2cEeszOLTucOJgrMxMviWcxueJT0in4dIzEnwM8Jm2xVWmsk7gBL6LFJLh7c4sCEG8wk9GP
        BsQSvEtRaaVashFN7KYwRrTpuN8tZaGR8VJ2jNcBIC2XrQ/jwxg0OQ2NbbSXxw3vs7i48R9bC4vKpG0Q
        vwuQdTNfxrWHx1upnuvJLSiRNrBIvHNU4iWxShCvYYLJ3sttMDFPno4Vz+Rwt8JAuEo4NsCtaFdBUbnE
        FHMYOSZggZOaeVOWuYiPGhCDini2IZOecvmqDAhxwxKwcLmZd0cUfOXaLbpzt5K6etZlAbjHGZoUXiVf
        5hVjWdXGJC1kI7ag3KQuiHAkA2VdPev/9oYJiDK4Xw2FxeXS52ZuHe+NelxYbGhoaG4V5eO0XApPThBp
        vnodHePnuC/E2UfdKeIsxqEdGwFwxBI6w+fCBMc2AAe+4EngeS6mX2c9FT22Qu4bGJQVPYwFn2b2j30d
        wE6iDmAnUQewk6gD2EnUAewk6gB2EnUAO4k6gJ1EHcBOog5gJ1EHsJOoA9hJ1AHsJOoAdhJ1ADuJOoCd
        RJsH0f8ApEx0rLz963wAAAAASUVORK5CYII=
</value>
  </data>
</root>